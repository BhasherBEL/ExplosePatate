include('../../main/INCLUDER') ;

  /////////////////
 //    Cache    //
/////////////////

global

global PRE_LEEKS_CELLS = [] ;

function init(){
	for(var cell=__MIN_CELL;cell<=__MAX_CELL;cell++){
		if(!_KEY_OBSTACLES[cell]){
	
			var xv = getCellX(cell) ; // _CELL_X[cell] ;
			var yv = getCellY(cell) ; //_CELL_Y[cell] ;

			if(!xv or !yv) continue ;

			var adjs = [getCellFromXY(xv+1, yv),
						getCellFromXY(xv, yv+1),
						getCellFromXY(xv-1, yv),
						getCellFromXY(xv, yv-1)] ;

			for(var adj in adjs){
				if(adj != null and !_KEY_OBSTACLES[adj]){
					NEIGHBOURS_CACHE[adj][cell] = 0 ;
				}
			}

		}
	}
}

function initTurn(){
	for(var leek_id : var old_leek_cell in PRE_LEEKS_CELLS){
	
		var xv = _CELL_X(old_leek_cell) ;
		var yv = _CELL_Y(old_leek_cell) ;
		
		if(!xv or !yv) continue ;
		
		var adjs = [getCellFromXY(xv+1, yv),
					getCellFromXY(xv, yv+1),
					getCellFromXY(xv-1, yv),
					getCellFromXY(xv, yv-1)] ;

		for(var adj in adjs){
			if(adj != null and !_KEY_OBSTACLES[adj]){
				NEIGHBOURS_CACHE[adj][old_leek_cell] = 0 ;
			}
		}
	}
	for(var leek_id : var leek_cell in _LEEK_CELL){
		var xv = _LEEK_CELL_X[leek_id] ;
		var yv = _LEEK_CELL_Y[leek_id] ;

		var adjs = [getCellFromXY(xv+1, yv),
					getCellFromXY(xv, yv+1),
					getCellFromXY(xv-1, yv),
					getCellFromXY(xv, yv-1)] ;

		for(var adj in adjs){
			if(adj != null and !_KEY_OBSTACLES[adj]){
				removeKey(NEIGHBOURS_CACHE[adj],leek_cell) ;
			}
		}
	}
	PRE_LEEKS_CELLS = _LEEK_CELL ;
}

if(getTurn() == 1){
	init() ;
}
initTurn() ;


/////////////////
 //  Fonctions  //
/////////////////

function getAccessibleCells(cell,mp){
	
	var neigbours = [] ;
	var new_neigbours = [cell: 0] ;
	
	for(var i=0;i<=mp;i++){
		var new_new_neigbours = [] ;
		for(var neighbour : var _ in new_neigbours){
			var adj_cells = getKeys(NEIGHBOURS_CACHE[neighbour]) ;
			for(var new_new_neigbour in adj_cells){
				new_new_neigbours[new_new_neigbour] = 0 ;
			}
			neigbours[neighbour] = i ;
		}
		new_neigbours = [] ;
		for(var el : var _ in new_new_neigbours){
			if(neigbours[el] == null) new_neigbours[el] = 0 ;
		}
	}
	return neigbours ;
}