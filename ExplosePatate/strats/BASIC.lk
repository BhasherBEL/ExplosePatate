include("../main/INCLUDER");

global MAP_CACHE = [] ;


// Retourne les cellules touchable depuis la cellule avec l'item
function getTargetableCells(@item,@cell){
	var in_cache = @MAP_CACHE[item][cell] ;
	if(in_cache != null) return in_cache ;
	
	var max_range = _ITEM_MAX_RANGE[item] ;
			
	var inline = _ITEM_IS_INLINE[item] ;
			
	var need_los = _ITEM_NEED_LOS[item] ;
	
	var targetable_cells = [] ;
		
	var x = _CELL_X[cell] ;
	var y = _CELL_Y[cell] ;
			
	for(var x1 = x-max_range; x1 <= x+max_range; x1++){
		for(var y1 = y-max_range; y1 <= y+max_range; y1++){
			// Calcul de la distance entre ma position et la position autour
			if(((x-x1)<0?x1-x:x-x1)+(y-y1<0?y1-y:y-y1) <= max_range){
				var shooted_cell = getCellFromXY(x1,y1) ;
				if(shooted_cell
				and (!inline or isOnSameLine(shooted_cell,cell))
				and (!need_los or lineOfSight(cell, shooted_cell))){
					targetable_cells[shooted_cell] = 0 ;
				}
				
			}
		}
	}
	
	if(!@MAP_CACHE[item]) MAP_CACHE[item] = [] ;
	
	MAP_CACHE[item][cell] = getKeys(targetable_cells) ;
	
	return @MAP_CACHE[item][cell] ;	
}

// Retourne les cellules touchables via AOE sous le format [cell: [cell, cell_to_shoot, dist]]
function getTargetableCellsWithAOE(@item,@cell){

	var AOE = abs(_ITEM_AREA[item]-2) ;
	
	var x = _CELL_X[cell] ;
	var y = _CELL_Y[cell] ;
	
	var cells_with_AOE = [] ;
	
	for(var cell_with_AOE in getTargetableCells(item, cell)){
		cells_with_AOE[cell_with_AOE] = [cell_with_AOE, cell, 0] ;
	}
	
	for(var x1 = x-AOE; x1 <= x+AOE; x1++){
		for(var y1 = y-AOE; y1 <= y+AOE; y1++){
			if(((x-x1)<0?x1-x:x-x1)+(y-y1<0?y1-y:y-y1) <= AOE){
				var cell_to_shoot = getCellFromXY(x1, y1) ;
				if(!cell_to_shoot) continue ;
				for(var cell_with_AOE in getTargetableCells(item, cell_to_shoot)){
					var dist = getCellDistance(cell_to_shoot, cell);
					if(!cells_with_AOE[cell_with_AOE] or dist < cells_with_AOE[cell_with_AOE][2]){
						cells_with_AOE[cell_with_AOE] = [cell_with_AOE, cell_to_shoot, dist] ;
					}
				}
			}
		}
	}
	
	return cells_with_AOE ;

}
